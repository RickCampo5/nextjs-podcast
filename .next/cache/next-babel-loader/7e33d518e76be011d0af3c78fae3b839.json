{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Rich/nextjs-podcast/components/PodcastGrid.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nexport default class PodcastGrid extends React.Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-1896203371\" + \" \" + \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, channels.map(channel => __jsx(Link, {\n      href: `/podcast/${channel.id}`,\n      prefetch: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-1896203371\" + \" \" + \"channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: channel.urls.image,\n      alt: \"\",\n      className: \"jsx-1896203371\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), __jsx(\"h2\", {\n      className: \"jsx-1896203371\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, channel.title)))), __jsx(_JSXStyle, {\n      id: \"1896203371\",\n      __self: this\n    }, \".channels.jsx-1896203371{display:grid;grid-gap:30px;padding:20px;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));}.channel.jsx-1896203371{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5;}.channel.jsx-1896203371 img.jsx-1896203371{width:100%;}h2.jsx-1896203371{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL1JpY2gvbmV4dGpzLXBvZGNhc3QvY29tcG9uZW50cy9Qb2RjYXN0R3JpZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQm9CLEFBRzBCLEFBTUMsQUFNSCxBQUdDLFdBRmQsQ0FHa0IsQ0FmRixDQU1JLGFBTEwsQ0FlRyxJQVQyQixRQUxpQixJQWVuRCxTQUNTLGtCQUNwQixDQVhvQixrQkFDcEIsUUFOQSIsImZpbGUiOiIvVXNlcnMvaW1hYy9SaWNoL25leHRqcy1wb2RjYXN0L2NvbXBvbmVudHMvUG9kY2FzdEdyaWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvZGNhc3RHcmlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbHMgfSA9IHRoaXMucHJvcHNcbiAgICBcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiID5cbiAgICAgICAgeyBcbiAgICAgICAgICBjaGFubmVscy5tYXAoY2hhbm5lbCA9PiAoXG4gICAgICAgICAgICA8TGluayBocmVmPXtgL3BvZGNhc3QvJHtjaGFubmVsLmlkfWB9IHByZWZldGNoPlxuICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XG4gICAgICAgICAgICAgICAgPGltZyBzcmM9e2NoYW5uZWwudXJscy5pbWFnZX0gYWx0PVwiXCIgLz5cbiAgICAgICAgICAgICAgICA8aDI+eyBjaGFubmVsLnRpdGxlIH08L2gyPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgKSkgXG4gICAgICAgIH1cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC1nYXA6IDMwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMzAwcHgsIDFmcikpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAuY2hhbm5lbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjU7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5jaGFubmVsIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaDIge1xuICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn0iXX0= */\\n/*@ sourceURL=/Users/imac/Rich/nextjs-podcast/components/PodcastGrid.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/imac/Rich/nextjs-podcast/components/PodcastGrid.js"],"names":["Link","PodcastGrid","React","Component","render","channels","props","map","channel","id","urls","image","title"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AACvDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WACE;AAAA,0CAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEID,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAClB,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,YAAWA,OAAO,CAACC,EAAG,EAAnC;AAAsC,MAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,0CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,IAAR,CAAaC,KAAvB;AAA8B,MAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,OAAO,CAACI,KAAd,CAFF,CADF,CADF,CAFJ;AAAA;AAAA;AAAA,wgFADF;AAsCD;;AA1CsD","sourcesContent":["import Link from 'next/link'\n\nexport default class PodcastGrid extends React.Component {\n  render() {\n    const { channels } = this.props\n    \n    return (\n      <div className=\"channels\" >\n        { \n          channels.map(channel => (\n            <Link href={`/podcast/${channel.id}`} prefetch>\n              <a className=\"channel\">\n                <img src={channel.urls.image} alt=\"\" />\n                <h2>{ channel.title }</h2>\n              </a>\n            </Link>\n          )) \n        }\n        <style jsx>{`\n          .channels {\n            display: grid;\n            grid-gap: 30px;\n            padding: 20px;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          }\n          .channel {\n            display: block;\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            margin-bottom: 0.5;\n          }\n          .channel img {\n            width: 100%;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}