{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nexport default function Clip() {\n  var router = useRouter();\n  var clipId = router.query.id;\n\n  function getAudioClip() {\n    return _getAudioClip.apply(this, arguments);\n  }\n\n  function _getAudioClip() {\n    _getAudioClip = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var reqClip, dataClip, audioClip;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.audioboom.com/audio_clips/\".concat(clipId, \".mp3\"));\n\n            case 2:\n              reqClip = _context.sent;\n              _context.next = 5;\n              return reqClip.json();\n\n            case 5:\n              dataClip = _context.sent;\n              audioClip = dataClip.body.audio_clip;\n              return _context.abrupt(\"return\", audioClip);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getAudioClip.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, getAudioClip(), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, audioClip.title));\n}","map":{"version":3,"sources":["/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js"],"names":["useRouter","Clip","router","clipId","query","id","getAudioClip","fetch","reqClip","json","dataClip","audioClip","body","audio_clip","title"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,MAAIG,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA1B;;AAF6B,WAIdC,YAJc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAI7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBC,KAAK,iDAA0CJ,MAA1C,UAD3B;;AAAA;AACMK,cAAAA,OADN;AAAA;AAAA,qBAEuBA,OAAO,CAACC,IAAR,EAFvB;;AAAA;AAEMC,cAAAA,QAFN;AAGMC,cAAAA,SAHN,GAGkBD,QAAQ,CAACE,IAAT,CAAcC,UAHhC;AAAA,+CAKSF,SALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJ6B;AAAA;AAAA;;AAa7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,YAAY,EAFhB,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,SAAS,CAACG,KAAf,CAJF,CADF;AAQD","sourcesContent":["import { useRouter } from 'next/router'\n\nexport default function Clip() {\n  const router = useRouter()\n  let clipId = router.query.id\n\n  async function getAudioClip () {\n    let reqClip = await fetch(`https://api.audioboom.com/audio_clips/${clipId}.mp3`)\n    let dataClip = await reqClip.json()\n    let audioClip = dataClip.body.audio_clip\n\n    return audioClip\n  }\n\n  \n  return (\n    <div>\n      {\n        getAudioClip()\n      }\n      <h1>{audioClip.title}</h1>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}