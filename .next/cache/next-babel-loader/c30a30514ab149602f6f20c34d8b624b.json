{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\n\nvar Clip = function Clip(props) {\n  console.log(props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.title));\n};\n\nClip.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, reqClip, clip;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.audioboom.com/audio_clips/\".concat(id, \".mp3\"));\n\n          case 3:\n            reqClip = _context.sent;\n            _context.next = 6;\n            return reqClip.json();\n\n          case 6:\n            clip = _context.sent;\n            console.log(clip);\n            return _context.abrupt(\"return\", {\n              clip: clip\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Clip;","map":{"version":3,"sources":["/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js"],"names":["Clip","props","console","log","title","getInitialProps","context","id","query","fetch","reqClip","json","clip"],"mappings":";;;;;AAAA,OAAO,kBAAP;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,KAAX,CADF,CADF;AAKD,CARD;;AAUAJ,IAAI,CAACK,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,mBAECE,KAAK,iDAA0CF,EAA1C,UAFN;;AAAA;AAEfG,YAAAA,OAFe;AAAA;AAAA,mBAGFA,OAAO,CAACC,IAAR,EAHE;;AAAA;AAGfC,YAAAA,IAHe;AAIrBV,YAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAJqB,6CAKd;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeZ,IAAf","sourcesContent":["import 'isomorphic-fetch'\n\nconst Clip = props => {\n  console.log(props)\n\n  return (\n    <div>\n      <h1>{props.title}</h1>\n    </div>  \n  )\n}\n\nClip.getInitialProps = async function (context) {\n  const { id } = context.query\n  const reqClip = await fetch(`https://api.audioboom.com/audio_clips/${id}.mp3`)\n  const clip = await reqClip.json()\n  console.log(clip)\n  return { clip }\n}\n\n\nexport default Clip\n"]},"metadata":{},"sourceType":"module"}