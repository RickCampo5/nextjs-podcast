{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport PodcastView from '../../components/PodcastView';\n\nconst Clip = props => {\n  const {\n    clip\n  } = props;\n  return __jsx(Layout, {\n    title: `${clip.title} - ${clip.channel.title}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(PodcastView, {\n    clip: clip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nClip.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const reqClip = await fetch(`https://api.audioboom.com/audio_clips/${id}.mp3`);\n  const clipData = await reqClip.json();\n  const clip = clipData.body.audio_clip;\n  return {\n    clip\n  };\n};\n\nexport default Clip;","map":{"version":3,"sources":["/Users/imac/Rich/nextjs-podcast/pages/podcast/[id].js"],"names":["PodcastView","Clip","props","clip","title","channel","getInitialProps","context","id","query","reqClip","fetch","clipData","json","body","audio_clip"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,GAAEC,IAAI,CAACC,KAAM,MAAKD,IAAI,CAACE,OAAL,CAAaD,KAAM,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAED,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;AAUAF,IAAI,CAACK,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,yCAAwCH,EAAG,MAA7C,CAA3B;AACA,QAAMI,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;AACA,QAAMV,IAAI,GAAGS,QAAQ,CAACE,IAAT,CAAcC,UAA3B;AACA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACD,CAND;;AASA,eAAeF,IAAf","sourcesContent":["import 'isomorphic-fetch'\nimport PodcastView from '../../components/PodcastView'\n\nconst Clip = props => {\n  const { clip } = props\n\n  return (\n    <Layout title={`${clip.title} - ${clip.channel.title}`}>\n      <PodcastView clip={clip} />\n    </Layout>\n  )\n}\n\nClip.getInitialProps = async function (context) {\n  const { id } = context.query\n  const reqClip = await fetch(`https://api.audioboom.com/audio_clips/${id}.mp3`)\n  const clipData = await reqClip.json()\n  const clip = clipData.body.audio_clip\n  return { clip }\n}\n\n\nexport default Clip\n"]},"metadata":{},"sourceType":"module"}